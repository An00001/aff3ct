variables:
  GIT_SUBMODULE_STRATEGY: none

stages:
  - analysis
  - build
  - check
  - test
  - coverage
  - deploy

before_script:
  - hostname
  - whoami
# - pwd

analysis-cppcheck:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_cppcheck:v1.9
  stage: analysis
  allow_failure: false
  artifacts:
    name: analysis-cppcheck-logs
    when: always
    paths:
      - cppcheck/
  tags:
    - linux
    - docker
  script:
    - ./ci/analysis-cppcheck.sh

analysis-clang:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_clang:v10.0.0
  stage: analysis
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  artifacts:
    name: analysis-clang-reports
    when: always
    paths:
      - clang_reports/
  only:
    - master
    - development
  tags:
    - linux
    - docker
  script:
    - export CFLAGS="-pedantic -fdiagnostics-show-option -Wall -Wno-overloaded-virtual"
    - export CMAKE_OPT="-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=OFF -DAFF3CT_COMPILE_SHARED_LIB=OFF -DAFF3CT_PREC=MULTI -DAFF3CT_EXT_STRINGS=OFF"
    - export NAME="build_analysis_clang"
    - export REPORTS_DIR="clang_reports"
    - source ./ci/tools/threads.sh
    - ./ci/analysis-clang.sh

analysis-headers:
  image: ubuntu:20.04
  stage: analysis
  artifacts:
    name: analysis-headers
    when: always
    paths:
      - aff3ct.hpp
  tags:
    - linux
    - docker
  script:
    - ./scripts/generate_aff3ct_header.sh aff3ct.hpp
    - diff aff3ct.hpp include/aff3ct.hpp

analysis-git-submodules:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_git:v2.25.1
  stage: analysis
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  tags:
    - linux
    - docker
  only:
    - master
    - development
  script:
    - source ./ci/tools/git-branch.sh
    - ./ci/analysis-git-submodule.sh

analysis-documentation:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_doc
  stage: analysis
  artifacts:
    name: analysis-documentation
    when: always
    paths:
      - doc/build/html
#     - doc/build/latex
      - doc/build/doxygen
  tags:
    - linux
    - docker
  script:
    - export THREADS="1"
    - ./ci/analysis-documentation.sh

build-linux-gcc-nointr:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_gcc:v9.3.0
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
  tags:
    - x86_64
    - linux
    - docker
  artifacts:
    name: build-linux-gcc-nointr
    paths:
      - build_linux_gcc_nointr
  script:
    - export CC="gcc"
    - export CXX="g++"
    - export CFLAGS="-Wall -funroll-loops -DMIPP_NO_INTRINSICS"
    - export LFLAGS="-static -static-libgcc -static-libstdc++ -Wl,--whole-archive -lrt -lpthread -Wl,--no-whole-archive"
    - export CMAKE_OPT="-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=ON -DAFF3CT_COMPILE_SHARED_LIB=ON -DAFF3CT_PREC=MULTI -DAFF3CT_EXT_STRINGS=OFF"
    - export NAME="build_linux_gcc_nointr"
    - source ./ci/tools/threads.sh
    - ./ci/build-linux-macos.sh

build-linux-gcc-x64-sse4.2:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_gcc:v9.3.0
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
    - job: analysis-documentation
      artifacts: true
  tags:
    - x86_64
    - linux
    - docker
  artifacts:
    name: build-linux-gcc-x64-sse4.2
    paths:
      - build_linux_gcc_x64_sse4.2
  script:
    - export CC="gcc"
    - export CXX="g++"
    - export CFLAGS="-Wall -funroll-loops -m64 -msse4.2"
    - export LFLAGS="-static -static-libgcc -static-libstdc++ -Wl,--whole-archive -lrt -lpthread -Wl,--no-whole-archive"
    - export CMAKE_OPT="-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=ON -DAFF3CT_COMPILE_SHARED_LIB=ON -DAFF3CT_PREC=MULTI -DAFF3CT_EXT_STRINGS=OFF"
    - export NAME="build_linux_gcc_x64_sse4.2"
    - source ./ci/tools/threads.sh
    - ./ci/build-linux-macos.sh

build-linux-gcc-x64-avx2:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_gcc:v9.3.0
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
    - job: analysis-documentation
      artifacts: true
  tags:
    - x86_64
    - linux
    - docker
  artifacts:
    name: build-linux-gcc-x64-avx2
    paths:
      - build_linux_gcc_x64_avx2
  script:
    - export CC="gcc"
    - export CXX="g++"
    - export CFLAGS="-Wall -funroll-loops -m64 -mavx2 -mfma"
    - export LFLAGS="-static -static-libgcc -static-libstdc++ -Wl,--whole-archive -lrt -lpthread -Wl,--no-whole-archive"
    - export CMAKE_OPT="-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=ON -DAFF3CT_COMPILE_SHARED_LIB=ON -DAFF3CT_PREC=MULTI -DAFF3CT_EXT_STRINGS=OFF"
    - export NAME="build_linux_gcc_x64_avx2"
    - source ./ci/tools/threads.sh
    - ./ci/build-linux-macos.sh

build-linux-gcc-8-bit:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_gcc:v9.3.0
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
  tags:
    - x86_64
    - linux
    - docker
  artifacts:
    name: build-linux-gcc-8-bit
    paths:
      - build_linux_gcc_8_bit
  script:
    - export CC="gcc"
    - export CXX="g++"
    - export CFLAGS="-Wall -funroll-loops -march=native"
    - export CMAKE_OPT="-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=ON -DAFF3CT_COMPILE_SHARED_LIB=ON -DAFF3CT_PREC=8 -DAFF3CT_EXT_STRINGS=OFF -DAFF3CT_LINK_GSL=ON"
    - export NAME="build_linux_gcc_8_bit"
    - source ./ci/tools/threads.sh
    - ./ci/build-linux-macos.sh

build-linux-gcc-mpi:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_openmpi:v4.0.3
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
  tags:
    - x86_64
    - linux
    - docker
  artifacts:
    name: build-linux-gcc-mpi
    paths:
      - build_linux_gcc_mpi
  script:
    - export CC="gcc"
    - export CXX="g++"
    - export CFLAGS="-Wall -funroll-loops -march=native"
    - export CMAKE_OPT="-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=OFF -DAFF3CT_COMPILE_SHARED_LIB=OFF -DAFF3CT_PREC=MULTI -DAFF3CT_EXT_STRINGS=OFF -DAFF3CT_LINK_GSL=ON -DAFF3CT_MPI=ON"
    - export NAME="build_linux_gcc_mpi"
    - source ./ci/tools/threads.sh
    - ./ci/build-linux-macos.sh

build-linux-clang:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_clang:v10.0.0
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
  tags:
    - x86_64
    - linux
    - docker
  artifacts:
    name: build-linux-clang
    paths:
      - build_linux_clang
  script:
    - export CC="clang"
    - export CXX="clang++"
    - export CFLAGS="-Wall -Wno-overloaded-virtual -funroll-loops"
    - export CMAKE_OPT="-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=ON -DAFF3CT_COMPILE_SHARED_LIB=ON -DAFF3CT_PREC=MULTI -DAFF3CT_EXT_STRINGS=OFF -DAFF3CT_LINK_GSL=ON"
    - export NAME="build_linux_clang"
    - source ./ci/tools/threads.sh
    - ./ci/build-linux-macos.sh

build-linux-icpc:
  image: intel/oneapi-hpckit
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
  tags:
    - x86_64
    - linux
    - docker
  artifacts:
    name: build-linux-icpc
    paths:
      - build_linux_icpc
  script:
    - export CC="icc"
    - export CXX="icpc"
    - export CFLAGS="-Wall -funroll-loops -march=native -std=c++11"
    - export CMAKE_OPT="-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=ON -DAFF3CT_COMPILE_SHARED_LIB=ON -DAFF3CT_PREC=MULTI -DAFF3CT_EXT_STRINGS=OFF -DAFF3CT_LINK_GSL=OFF -DAFF3CT_LINK_MKL=ON"
    - export NAME="build_linux_icpc"
    - source ./ci/tools/threads.sh
    - ./ci/build-linux-macos.sh

build-windows-gcc-x86-sse4.2:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
    - job: analysis-documentation
      artifacts: true
  tags:
    - windows
    - gcc
    - cmake
    - x86
    - 64-bit
  artifacts:
    name: build-windows-gcc-x86-sse4.2
    paths:
      - build_windows_gcc_x86_sse4.2
  script:
    - set "CFLAGS=-Wall -funroll-loops -m64 -msse4.2"
    - set "LFLAGS=-static -static-libgcc -static-libstdc++"
    - set "CMAKE_OPT=-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=ON -DAFF3CT_COMPILE_SHARED_LIB=ON -DAFF3CT_PREC=MULTI -DAFF3CT_EXT_STRINGS=OFF"
    - set "NAME=build_windows_gcc_x86_sse4.2"
    - call ./ci/tools/threads.bat
    - ./ci/build-windows-gcc.bat

build-windows-gcc-x64-avx2:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
    - job: analysis-documentation
      artifacts: true
  tags:
    - windows
    - 64-bit
    - gcc
    - cmake
    - x86
  artifacts:
    name: build-windows-gcc-x64-avx2
    paths:
      - build_windows_gcc_x64_avx2
  script:
    - set "CFLAGS=-Wall -funroll-loops -m64 -mavx2"
    - set "LFLAGS=-static -static-libgcc -static-libstdc++"
    - set "CMAKE_OPT=-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=ON -DAFF3CT_COMPILE_SHARED_LIB=ON -DAFF3CT_PREC=MULTI -DAFF3CT_EXT_STRINGS=OFF"
    - set "NAME=build_windows_gcc_x64_avx2"
    - call ./ci/tools/threads.bat
    - ./ci/build-windows-gcc.bat

build-windows-msvc-avx:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
  tags:
    - windows
    - msvc
    - cmake
    - x86
  artifacts:
    name: build-windows-msvc-avx
    paths:
      - build_windows_msvc_avx
  script:
    - set "CFLAGS=-D_CRT_SECURE_NO_DEPRECATE /MT /EHsc /arch:AVX"
    - set "CMAKE_OPT=-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=ON -DAFF3CT_COMPILE_SHARED_LIB=ON -DAFF3CT_PREC=MULTI"
    - set "NAME=build_windows_msvc_avx"
    - call ./ci/tools/threads.bat
    - ./ci/build-windows-msvc.bat

build-macos-clang-x64-sse4.2:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
    - job: analysis-documentation
      artifacts: true
  tags:
    - macos
    - apple-clang
    - cmake
    - x86
  artifacts:
    name: build-macos-clang-x64-sse4.2
    paths:
      - build_macos_clang_x64_sse4.2
  script:
    - export CC="clang"
    - export CXX="clang++"
    - export CFLAGS="-Wall -Wno-overloaded-virtual -funroll-loops -m64 -msse4.2"
    - export CMAKE_OPT="-DAFF3CT_COMPILE_EXE=ON -DAFF3CT_COMPILE_STATIC_LIB=ON -DAFF3CT_COMPILE_SHARED_LIB=ON -DAFF3CT_PREC=MULTI -DAFF3CT_EXT_STRINGS=OFF"
    - export NAME="build_macos_clang_x64_sse4.2"
    - source ./ci/tools/threads.sh
    - ./ci/build-linux-macos.sh

check-debug-parser:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: check
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
  artifacts:
    name: debug-parser-output
    when: always
    paths:
      - scripts/debug_parser/test/data
  script:
    - source ./ci/tools/git-version.sh
    - cd ./scripts/debug_parser/
    - pip3 install -r requirements.txt
    - export AFF3CT_PATH="../../../build_linux_gcc_x64_sse4.2/bin/aff3ct-$GIT_VERSION"
    - ./test/test.sh

check-documentation:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: check
  except:
    - schedules
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
  script:
    - ./ci/check-documentation.py --aff3ct "build_linux_gcc_x64_sse4.2/bin/aff3ct"

test-regression-bch:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
  artifacts:
     name: test-regression-results-bch
     when: always
     paths:
      - test-regression-results-bch/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="5"
    - export TIME_SEC=$CI_AFF3CT_TEST_BCH_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/BCH --results-path test-regression-results-bch --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-ldpc:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
    - powerful
  artifacts:
     name: test-regression-results-ldpc
     when: always
     paths:
      - test-regression-results-ldpc/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="10"
    - export TIME_SEC=$CI_AFF3CT_TEST_LDPC_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/LDPC --results-path test-regression-results-ldpc --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-polar:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
    - powerful
  artifacts:
     name: test-regression-results-polar
     when: always
     paths:
      - test-regression-results-polar/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="5"
    - export TIME_SEC=$CI_AFF3CT_TEST_POLAR_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/POLAR --results-path test-regression-results-polar --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-polar-mk:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
    - powerful
  artifacts:
     name: test-regression-results-polar-mk
     when: always
     paths:
      - test-regression-results-polar-mk/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="5"
    - export TIME_SEC=$CI_AFF3CT_TEST_POLAR_MK_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/POLAR_MK --results-path test-regression-results-polar-mk --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-ra:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  except:
    - schedules
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
  artifacts:
     name: test-regression-results-ra
     when: always
     paths:
      - test-regression-results-ra/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="5"
    - export TIME_SEC=$CI_AFF3CT_TEST_RA_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/RA --results-path test-regression-results-ra --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-rep:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
  artifacts:
     name: test-regression-results-rep
     when: always
     paths:
      - test-regression-results-rep/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="5"
    - export TIME_SEC=$CI_AFF3CT_TEST_REP_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/REP --results-path test-regression-results-rep --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-rs:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
  artifacts:
     name: test-regression-results-rs
     when: always
     paths:
      - test-regression-results-rs/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="5"
    - export TIME_SEC=$CI_AFF3CT_TEST_RS_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/RS --results-path test-regression-results-rs --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-rsc:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
  artifacts:
     name: test-regression-results-rsc
     when: always
     paths:
      - test-regression-results-rsc/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="5"
    - export TIME_SEC=$CI_AFF3CT_TEST_RSC_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/RSC --results-path test-regression-results-rsc --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-rsc-db:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
  artifacts:
     name: test-regression-results-rsc-db
     when: always
     paths:
      - test-regression-results-rsc-db/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="5"
    - export TIME_SEC=$CI_AFF3CT_TEST_RSC_DB_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/RSC_DB --results-path test-regression-results-rsc-db --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-turbo:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
    - powerful
  artifacts:
     name: test-regression-results-turbo
     when: always
     paths:
      - test-regression-results-turbo/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="5"
    - export TIME_SEC=$CI_AFF3CT_TEST_TURBO_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/TURBO --results-path test-regression-results-turbo --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-turbo-db:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
    - powerful
  artifacts:
     name: test-regression-results-turbo-db
     when: always
     paths:
      - test-regression-results-turbo-db/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="5"
    - export TIME_SEC=$CI_AFF3CT_TEST_TURBO_DB_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/TURBO_DB --results-path test-regression-results-turbo-db --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-turbo-prod:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
    - powerful
  artifacts:
     name: test-regression-results-turbo-prod
     when: always
     paths:
      - test-regression-results-turbo-prod/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="30"
    - export TIME_SEC=$CI_AFF3CT_TEST_TURBO_PROD_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/TURBO_PROD --results-path test-regression-results-turbo-prod --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-regression-uncoded:
  image: registry.gitlab.com/aff3ct/aff3ct/x86_64_ubuntu_python:v3.8.5
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  retry: 1
  needs:
    - job: build-linux-gcc-x64-sse4.2
      artifacts: true
  tags:
    - x86_64
    - sse4.2
    - linux
    - docker
  artifacts:
     name: test-regression-results-uncoded
     when: always
     paths:
      - test-regression-results-uncoded/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
#   - export TIME_SEC="5"
    - export TIME_SEC=$CI_AFF3CT_TEST_UNCODED_TIME_SEC
    - ./ci/test-regression.py --refs-path refs/UNCODED --results-path test-regression-results-uncoded --build-path build_linux_gcc_x64_sse4.2 --binary-path bin/aff3ct-$GIT_VERSION --max-snr-time $TIME_SEC --sensibility 2.5 --weak-rate 0.9 --verbose 1 --n-threads $THREADS

test-build-coverage-regression:
  stage: test
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  needs:
    - job: analysis-cppcheck
      artifacts: false
    - job: analysis-headers
      artifacts: false
  tags:
    - linux
    - gcc
    - lcov
    - sse4.2
    - powerful
  artifacts:
     name: code-coverage-files
     when: always
     paths:
      - code_coverage_files/
  script:
    - source ./ci/tools/threads.sh
    - source ./ci/tools/git-version.sh
    - ./ci/test-build-coverage-regression.sh

coverage-linux:
  stage: coverage
  except:
    - schedules
  needs:
    - job: test-build-coverage-regression
      artifacts: true
  tags:
    - linux
    - lcov
    - lcov_cobertura
  coverage: '/.*lines\.*: (\d+.\d+\%)/'
  artifacts:
     name: code-coverage-report
     when: always
     paths:
       - code_coverage_report/
  script:
    - ./ci/coverage-linux.sh

deploy-sonarqube-linux:
  stage: deploy
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  dependencies:
    - analysis-cppcheck
    - coverage-linux
    - analysis-clang
  tags:
    - linux
    - sonarqube
    - gcc
  only:
    - master
    - development
  allow_failure: true
  script:
    - export REPORTS_DIR="clang_reports"
    - source ./ci/tools/git-tag.sh
    - source ./ci/tools/git-branch.sh
    - ./ci/deploy-sonarqube-linux.sh

deploy-builds-linux:
  stage: deploy
  except:
    - schedules
  dependencies:
    - build-linux-gcc-x64-sse4.2
    - build-linux-gcc-x64-avx2
    - build-windows-gcc-x86-sse4.2
    - build-windows-gcc-x64-avx2
    - build-macos-clang-x64-sse4.2
  tags:
    - linux
    - github
  only:
    - master
    - development
  artifacts:
     name: builds
     when: always
     paths:
      - builds/
  allow_failure: true
  script:
    - source ./ci/tools/git-branch.sh
    - source ./ci/tools/git-tag.sh
    - source ./ci/tools/git-hash.sh
    - source ./ci/tools/git-date.sh
    - source ./ci/tools/git-message.sh
    - source ./ci/tools/git-author.sh
    - source ./ci/tools/git-version.sh
    - ./ci/deploy-builds-linux.sh build_linux_gcc_x64_sse4.2 build_linux_gcc_x64_avx2 build_windows_gcc_x86_sse4.2 build_windows_gcc_x64_avx2 build_macos_clang_x64_sse4.2

deploy-upload-ppa:
  stage: deploy
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  except:
    - schedules
  dependencies:
    - analysis-documentation
  allow_failure: true
  tags:
    - linux
    - gcc
    - cmake
    - x86
    - 64-bit
    - ppa
  only:
    - master
    - development
    - ppa_upload
  artifacts:
    name: ppa_files
    when: always
    paths:
      - build/Debian/xenial/*.xz
      - build/Debian/xenial/*.dsc
      - build/Debian/xenial/*.build
  script:
    - source ./ci/tools/git-branch.sh
    - source ./ci/tools/threads.sh
    - export DISTRIBS="xenial;bionic;focal"
    - export CC="gcc"
    - export CXX="g++"
    - export CFLAGS="-Wall -funroll-loops -m64 -msse4.2"
    - export LFLAGS="-static -static-libgcc -static-libstdc++ -Wl,--whole-archive -lrt -lpthread -Wl,--no-whole-archive"
    - export CMAKE_OPT="-DAFF3CT_COMPILE_EXE=OFF -DAFF3CT_COMPILE_STATIC_LIB=OFF -DAFF3CT_COMPILE_SHARED_LIB=OFF -DAFF3CT_PREC=MULTI -DAFF3CT_EXT_STRINGS=OFF"
    - export NAME="build"
    - ./ci/deploy-upload-ppa.sh

pages:
  stage: deploy
  except:
    - schedules
  tags:
    - linux
  dependencies:
    - coverage-linux
  allow_failure: true
  script:
    - mv code_coverage_report/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - development
